//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int AnimatorView = 0;
    public const int ArrowTag = 1;
    public const int AttackCooldown = 2;
    public const int AttackRange = 3;
    public const int AttackRequest = 4;
    public const int AttackTimer = 5;
    public const int DamagableTag = 6;
    public const int Damage = 7;
    public const int DamageDealRequest = 8;
    public const int DeathEvent = 9;
    public const int DeathRequest = 10;
    public const int DelayedDeath = 11;
    public const int Direction = 12;
    public const int EnemyTarget = 13;
    public const int FireRequest = 14;
    public const int Health = 15;
    public const int Inactive = 16;
    public const int MeleeAttacker = 17;
    public const int MeleeAttackEvent = 18;
    public const int MeleeWeapon = 19;
    public const int MoveDirection = 20;
    public const int MoveSpeed = 21;
    public const int MovingEvent = 22;
    public const int Position = 23;
    public const int Prefab = 24;
    public const int RangeAttacker = 25;
    public const int RangeAttackEvent = 26;
    public const int RangeWeapon = 27;
    public const int ShootRequest = 28;
    public const int SourceEntity = 29;
    public const int SpawnRequest = 30;
    public const int TakeDamageRequest = 31;
    public const int Target = 32;
    public const int TargetEntity = 33;
    public const int TargetInRange = 34;
    public const int Team = 35;
    public const int TransformView = 36;
    public const int TriggerEnterRequest = 37;

    public const int TotalComponents = 38;

    public static readonly string[] componentNames = {
        "AnimatorView",
        "ArrowTag",
        "AttackCooldown",
        "AttackRange",
        "AttackRequest",
        "AttackTimer",
        "DamagableTag",
        "Damage",
        "DamageDealRequest",
        "DeathEvent",
        "DeathRequest",
        "DelayedDeath",
        "Direction",
        "EnemyTarget",
        "FireRequest",
        "Health",
        "Inactive",
        "MeleeAttacker",
        "MeleeAttackEvent",
        "MeleeWeapon",
        "MoveDirection",
        "MoveSpeed",
        "MovingEvent",
        "Position",
        "Prefab",
        "RangeAttacker",
        "RangeAttackEvent",
        "RangeWeapon",
        "ShootRequest",
        "SourceEntity",
        "SpawnRequest",
        "TakeDamageRequest",
        "Target",
        "TargetEntity",
        "TargetInRange",
        "Team",
        "TransformView",
        "TriggerEnterRequest"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(AnimatorViewComponent),
        typeof(ArrowTagComponent),
        typeof(AttackCooldownComponent),
        typeof(AttackRangeComponent),
        typeof(AttackRequest),
        typeof(AttackTimerComponent),
        typeof(DamagableTagComponent),
        typeof(DamageComponent),
        typeof(DamageDealRequest),
        typeof(DeathEventComponent),
        typeof(DeathRequestComponent),
        typeof(DelayedDeathComponent),
        typeof(DirectionComponent),
        typeof(EnemyTargetComponent),
        typeof(FireRequestComponent),
        typeof(HealthComponent),
        typeof(InactiveComponent),
        typeof(MeleeAttackerComponent),
        typeof(MeleeAttackEventComponent),
        typeof(MeleeWeaponComponent),
        typeof(MoveDirectionComponent),
        typeof(MoveSpeedComponent),
        typeof(MovingEventComponent),
        typeof(PositionComponent),
        typeof(PrefabComponent),
        typeof(RangeAttackerComponent),
        typeof(RangeAttackEventComponent),
        typeof(RangeWeaponComponent),
        typeof(ShootRequestComponent),
        typeof(SourceEntityComponent),
        typeof(SpawnRequestComponent),
        typeof(TakeDamageRequestComponent),
        typeof(TargetComponent),
        typeof(TargetEntityComponent),
        typeof(TargetInRangeComponent),
        typeof(TeamComponent),
        typeof(TransformViewComponent),
        typeof(TriggerEnterRequestComponent)
    };
}
