//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RotationRateComponent rotationRate { get { return (RotationRateComponent)GetComponent(GameComponentsLookup.RotationRate); } }
    public bool hasRotationRate { get { return HasComponent(GameComponentsLookup.RotationRate); } }

    public void AddRotationRate(float newValue) {
        var index = GameComponentsLookup.RotationRate;
        var component = (RotationRateComponent)CreateComponent(index, typeof(RotationRateComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRotationRate(float newValue) {
        var index = GameComponentsLookup.RotationRate;
        var component = (RotationRateComponent)CreateComponent(index, typeof(RotationRateComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRotationRate() {
        RemoveComponent(GameComponentsLookup.RotationRate);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRotationRate;

    public static Entitas.IMatcher<GameEntity> RotationRate {
        get {
            if (_matcherRotationRate == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RotationRate);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRotationRate = matcher;
            }

            return _matcherRotationRate;
        }
    }
}
