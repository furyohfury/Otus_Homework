//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RangeWeaponComponent rangeWeapon { get { return (RangeWeaponComponent)GetComponent(GameComponentsLookup.RangeWeapon); } }
    public bool hasRangeWeapon { get { return HasComponent(GameComponentsLookup.RangeWeapon); } }

    public void AddRangeWeapon(UnityEngine.Transform newFirePoint, EntityView newProjectilePrefab) {
        var index = GameComponentsLookup.RangeWeapon;
        var component = (RangeWeaponComponent)CreateComponent(index, typeof(RangeWeaponComponent));
        component.FirePoint = newFirePoint;
        component.ProjectilePrefab = newProjectilePrefab;
        AddComponent(index, component);
    }

    public void ReplaceRangeWeapon(UnityEngine.Transform newFirePoint, EntityView newProjectilePrefab) {
        var index = GameComponentsLookup.RangeWeapon;
        var component = (RangeWeaponComponent)CreateComponent(index, typeof(RangeWeaponComponent));
        component.FirePoint = newFirePoint;
        component.ProjectilePrefab = newProjectilePrefab;
        ReplaceComponent(index, component);
    }

    public void RemoveRangeWeapon() {
        RemoveComponent(GameComponentsLookup.RangeWeapon);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRangeWeapon;

    public static Entitas.IMatcher<GameEntity> RangeWeapon {
        get {
            if (_matcherRangeWeapon == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RangeWeapon);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRangeWeapon = matcher;
            }

            return _matcherRangeWeapon;
        }
    }
}
