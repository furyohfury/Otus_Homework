//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DamagedParticleSystemComponent damagedParticleSystem { get { return (DamagedParticleSystemComponent)GetComponent(GameComponentsLookup.DamagedParticleSystem); } }
    public bool hasDamagedParticleSystem { get { return HasComponent(GameComponentsLookup.DamagedParticleSystem); } }

    public void AddDamagedParticleSystem(UnityEngine.ParticleSystem newValue) {
        var index = GameComponentsLookup.DamagedParticleSystem;
        var component = (DamagedParticleSystemComponent)CreateComponent(index, typeof(DamagedParticleSystemComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDamagedParticleSystem(UnityEngine.ParticleSystem newValue) {
        var index = GameComponentsLookup.DamagedParticleSystem;
        var component = (DamagedParticleSystemComponent)CreateComponent(index, typeof(DamagedParticleSystemComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDamagedParticleSystem() {
        RemoveComponent(GameComponentsLookup.DamagedParticleSystem);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDamagedParticleSystem;

    public static Entitas.IMatcher<GameEntity> DamagedParticleSystem {
        get {
            if (_matcherDamagedParticleSystem == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DamagedParticleSystem);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDamagedParticleSystem = matcher;
            }

            return _matcherDamagedParticleSystem;
        }
    }
}
