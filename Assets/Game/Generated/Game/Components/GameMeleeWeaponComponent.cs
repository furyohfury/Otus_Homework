//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MeleeWeaponComponent meleeWeapon { get { return (MeleeWeaponComponent)GetComponent(GameComponentsLookup.MeleeWeapon); } }
    public bool hasMeleeWeapon { get { return HasComponent(GameComponentsLookup.MeleeWeapon); } }

    public void AddMeleeWeapon(UnityEngine.Collider newHitBox, int newDamage) {
        var index = GameComponentsLookup.MeleeWeapon;
        var component = (MeleeWeaponComponent)CreateComponent(index, typeof(MeleeWeaponComponent));
        component.HitBox = newHitBox;
        component.Damage = newDamage;
        AddComponent(index, component);
    }

    public void ReplaceMeleeWeapon(UnityEngine.Collider newHitBox, int newDamage) {
        var index = GameComponentsLookup.MeleeWeapon;
        var component = (MeleeWeaponComponent)CreateComponent(index, typeof(MeleeWeaponComponent));
        component.HitBox = newHitBox;
        component.Damage = newDamage;
        ReplaceComponent(index, component);
    }

    public void RemoveMeleeWeapon() {
        RemoveComponent(GameComponentsLookup.MeleeWeapon);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMeleeWeapon;

    public static Entitas.IMatcher<GameEntity> MeleeWeapon {
        get {
            if (_matcherMeleeWeapon == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MeleeWeapon);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMeleeWeapon = matcher;
            }

            return _matcherMeleeWeapon;
        }
    }
}
